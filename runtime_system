
declare i32 @printf(i8*, ...)
declare i32 @scanf(i8*, ...)
declare noalias i8* @malloc(i64)
declare void @free(i8*)
declare i32 @__isoc99_scanf(i8*, ...)

%struct.Node = type { i8*, %struct.Node* }

@ROOT = global %struct.Node* null, align 8
@.str = private unnamed_addr constant [14 x i8] c"malloc error\0A\00", align 1
@.str1 = private unnamed_addr constant [11 x i8] c"value: %s\0A\00", align 1
@.str2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

@format_spec_i = private unnamed_addr constant [3 x i8] c"%i\00"
@format_spec_b = private unnamed_addr constant [3 x i8] c"%i\00"
@format_spec_d = private unnamed_addr constant [4 x i8] c"%lf\00"
@format_spec_c = private unnamed_addr constant [3 x i8] c"%c\00"
@format_spec_s = private unnamed_addr constant [3 x i8] c"%s\00"
@newline = private unnamed_addr constant [2 x i8] c"\0A\00"

; Function Attrs: nounwind uwtable
define %struct.Node* @create_node() #0 {
  %node = alloca %struct.Node*, align 8
  %1 = call noalias i8* @malloc(i64 16) #4
  %2 = bitcast i8* %1 to %struct.Node*
  store %struct.Node* %2, %struct.Node** %node, align 8
  %3 = load %struct.Node** %node, align 8
  %4 = icmp eq %struct.Node* %3, null
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str, i32 0, i32 0))
  call void @exit(i32 0) #5
  unreachable

; <label>:7                                       ; preds = %0
  %8 = load %struct.Node** %node, align 8
  %9 = getelementptr inbounds %struct.Node* %8, i32 0, i32 1
  store %struct.Node* null, %struct.Node** %9, align 8
  %10 = load %struct.Node** %node, align 8
  ret %struct.Node* %10
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define void @free_all(%struct.Node* %node) #0 {
  %1 = alloca %struct.Node*, align 8
  store %struct.Node* %node, %struct.Node** %1, align 8
  %2 = load %struct.Node** %1, align 8
  %3 = getelementptr inbounds %struct.Node* %2, i32 0, i32 1
  %4 = load %struct.Node** %3, align 8
  %5 = icmp ne %struct.Node* %4, null
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load %struct.Node** %1, align 8
  %8 = getelementptr inbounds %struct.Node* %7, i32 0, i32 1
  %9 = load %struct.Node** %8, align 8
  call void @free_all(%struct.Node* %9)
  br label %10

; <label>:10                                      ; preds = %6, %0
  %11 = load %struct.Node** %1, align 8
  %12 = getelementptr inbounds %struct.Node* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  call void @free(i8* %13) #4
  %14 = load %struct.Node** %1, align 8
  %15 = bitcast %struct.Node* %14 to i8*
  call void @free(i8* %15) #4
  ret void
}

; Function Attrs: nounwind uwtable
define void @print_values(%struct.Node* %node) #0 {
  %1 = alloca %struct.Node*, align 8
  store %struct.Node* %node, %struct.Node** %1, align 8
  br label %2

; <label>:2                                       ; preds = %0, %16
  %3 = load %struct.Node** %1, align 8
  %4 = getelementptr inbounds %struct.Node* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str1, i32 0, i32 0), i8* %5)
  %7 = load %struct.Node** %1, align 8
  %8 = getelementptr inbounds %struct.Node* %7, i32 0, i32 1
  %9 = load %struct.Node** %8, align 8
  %10 = icmp ne %struct.Node* %9, null
  br i1 %10, label %11, label %15

; <label>:11                                      ; preds = %2
  %12 = load %struct.Node** %1, align 8
  %13 = getelementptr inbounds %struct.Node* %12, i32 0, i32 1
  %14 = load %struct.Node** %13, align 8
  store %struct.Node* %14, %struct.Node** %1, align 8
  br label %16

; <label>:15                                      ; preds = %2
  br label %17

; <label>:16                                      ; preds = %11
  br label %2

; <label>:17                                      ; preds = %15
  ret void
}

; Function Attrs: nounwind uwtable
define void @append_node(%struct.Node* %new_node, %struct.Node* %node) #0 {
  %1 = alloca %struct.Node*, align 8
  %2 = alloca %struct.Node*, align 8
  store %struct.Node* %new_node, %struct.Node** %1, align 8
  store %struct.Node* %node, %struct.Node** %2, align 8
  br label %3

; <label>:3                                       ; preds = %8, %0
  %4 = load %struct.Node** %2, align 8
  %5 = getelementptr inbounds %struct.Node* %4, i32 0, i32 1
  %6 = load %struct.Node** %5, align 8
  %7 = icmp ne %struct.Node* %6, null
  br i1 %7, label %8, label %12

; <label>:8                                       ; preds = %3
  %9 = load %struct.Node** %2, align 8
  %10 = getelementptr inbounds %struct.Node* %9, i32 0, i32 1
  %11 = load %struct.Node** %10, align 8
  store %struct.Node* %11, %struct.Node** %2, align 8
  br label %3

; <label>:12                                      ; preds = %3
  %13 = load %struct.Node** %1, align 8
  %14 = load %struct.Node** %2, align 8
  %15 = getelementptr inbounds %struct.Node* %14, i32 0, i32 1
  store %struct.Node* %13, %struct.Node** %15, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @get_string_length(i8* %buffer) #0 {
  %1 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %buffer, i8** %1, align 8
  store i32 0, i32* %i, align 4
  br label %2

; <label>:2                                       ; preds = %11, %0
  %3 = load i32* %i, align 4
  %4 = sext i32 %3 to i64
  %5 = load i8** %1, align 8
  %6 = getelementptr inbounds i8* %5, i64 %4
  %7 = load i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %14

; <label>:10                                      ; preds = %2
  br label %11

; <label>:11                                      ; preds = %10
  %12 = load i32* %i, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %i, align 4
  br label %2

; <label>:14                                      ; preds = %2
  %15 = load i32* %i, align 4
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i8* @create_string(i8* %buffer) #0 {
  %1 = alloca i8*, align 8
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  %str = alloca i8*, align 8
  store i8* %buffer, i8** %1, align 8
  %2 = load i8** %1, align 8
  %3 = call i32 @get_string_length(i8* %2)
  store i32 %3, i32* %length, align 4
  %4 = load i32* %length, align 4
  %5 = add nsw i32 %4, 1
  %6 = sext i32 %5 to i64
  %7 = call noalias i8* @malloc(i64 %6) #4
  store i8* %7, i8** %str, align 8
  store i32 0, i32* %i, align 4
  br label %8

; <label>:8                                       ; preds = %22, %0
  %9 = load i32* %i, align 4
  %10 = load i32* %length, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %25

; <label>:12                                      ; preds = %8
  %13 = load i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i8** %1, align 8
  %16 = getelementptr inbounds i8* %15, i64 %14
  %17 = load i8* %16, align 1
  %18 = load i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = load i8** %str, align 8
  %21 = getelementptr inbounds i8* %20, i64 %19
  store i8 %17, i8* %21, align 1
  br label %22

; <label>:22                                      ; preds = %12
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %8

; <label>:25                                      ; preds = %8
  %26 = load i32* %length, align 4
  %27 = sext i32 %26 to i64
  %28 = load i8** %str, align 8
  %29 = getelementptr inbounds i8* %28, i64 %27
  store i8 0, i8* %29, align 1
  %30 = load i8** %str, align 8
  ret i8* %30
}

; Function Attrs: nounwind uwtable
define void @init_heap() #0 {
  %1 = call %struct.Node* @create_node()
  store %struct.Node* %1, %struct.Node** @ROOT, align 8
  %2 = load %struct.Node** @ROOT, align 8
  %3 = getelementptr inbounds %struct.Node* %2, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = load %struct.Node** @ROOT, align 8
  %5 = getelementptr inbounds %struct.Node* %4, i32 0, i32 1
  store %struct.Node* null, %struct.Node** %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @cleanup_heap() #0 {
  %1 = load %struct.Node** @ROOT, align 8
  call void @free_all(%struct.Node* %1)
  ret void
}

; Function Attrs: nounwind uwtable
define void @getstring(i8** %output) #0 {
  %1 = alloca i8**, align 8
  %new_node = alloca %struct.Node*, align 8
  %buffer = alloca [1000 x i8], align 16
  store i8** %output, i8*** %1, align 8
  %2 = getelementptr inbounds [1000 x i8]* %buffer, i32 0, i32 0
  %3 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0), i8* %2)
  %4 = call %struct.Node* @create_node()
  store %struct.Node* %4, %struct.Node** %new_node, align 8
  %5 = getelementptr inbounds [1000 x i8]* %buffer, i32 0, i32 0
  %6 = call i8* @create_string(i8* %5)
  %7 = load %struct.Node** %new_node, align 8
  %8 = getelementptr inbounds %struct.Node* %7, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = load %struct.Node** %new_node, align 8
  %10 = load %struct.Node** @ROOT, align 8
  call void @append_node(%struct.Node* %9, %struct.Node* %10)
  %11 = load %struct.Node** %new_node, align 8
  %12 = getelementptr inbounds %struct.Node* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  %14 = load i8*** %1, align 8
  store i8* %13, i8** %14, align 8
  ret void
}

define void @putnewline(){
  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @newline, i32 0, i32 0))
  ret void;
}

define void @getinteger(i32* %output){
  %d = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @format_spec_i, i32 0, i32 0), i32* %output)
  ret void;
}

define void @getfloat(double* %output){
  %d = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([4 x i8]* @format_spec_d, i32 0, i32 0), double* %output)
  ret void;
}

define void @getchar(i8* %output){
  %d = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @format_spec_c, i32 0, i32 0), i8* %output)
  ret void;
}

define void @getbool(i1* %output){
  %d = call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([3 x i8]* @format_spec_i, i32 0, i32 0), i1* %output)
  ret void;
}

define void @putinteger(i32 %val){
  %d = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @format_spec_i, i32 0, i32 0), i32 %val)
  ret void;
}

define void @putchar(i8 %val){
  %ascii = sext i8 %val to i32
  %d = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @format_spec_c, i32 0, i32 0), i32 %ascii)
  ret void;
}

define void @putbool(i1 %val){
  %d = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @format_spec_b, i32 0, i32 0), i1 %val)
  ret void;
}

define void @putfloat(double %val){
  %d = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @format_spec_d, i32 0, i32 0), double %val)
  ret void;
}

define void @putstring(i8* %val){
  %d = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @format_spec_s, i32 0, i32 0), i8* %val)
  ret void;
}
